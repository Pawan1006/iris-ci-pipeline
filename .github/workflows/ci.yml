name: IRIS CI Pipeline

on:
  push:
    # Triggers on push to both the 'main' and 'dev' branches
    branches: [main, dev]
  pull_request:
    # Triggers on Pull Requests targeting both 'main' and 'dev' branches
    branches: [main, dev]

jobs:
  ci:
    runs-on: ubuntu-latest
    env:
      # Secret used for DVC/GCS authentication. Must be set in GitHub Secrets.
      GCP_CREDENTIALS_JSON: ${{ secrets.GCP_CREDENTIALS }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: Install dependencies (pip, setuptools, DVC)
        run: |
          # Upgrade essential tools
          python -m pip install --upgrade pip setuptools wheel
          # Install project dependencies (including pytest/unittest if in requirements.txt)
          pip install -r requirements.txt --no-cache-dir
          # Install DVC with Google Cloud Storage support
          pip install "dvc[gcs]" --no-cache-dir

      - name: Configure GCP credentials
        run: |
          # Save GCP key from secret to a file
          printf "%s" "${GCP_CREDENTIALS_JSON}" > gcp-key.json
          # Set the environment variable for DVC/GCS to use the key file
          echo "GOOGLE_APPLICATION_CREDENTIALS=$(pwd)/gcp-key.json" >> $GITHUB_ENV

      - name: Pull data & model from DVC
        # Fetches the version-controlled data and model from the GCS remote
        run: dvc pull -v

      - name: Run Pytest tests (Evaluation & Validation)
        run: |
          # Executes tests, generates an XML report, and saves the console output to result.txt
          pytest tests/ --junitxml=result.xml --tb=short | tee result.txt

      - name: Comment test results via CML
        # This step only runs when a Pull Request triggers the workflow
        if: github.event_name == 'pull_request'
        # Sets up the CML environment
        uses: iterative/setup-cml@v2
        env:
          # Uses the GitHub token for permission to post comments
          REPO_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        # Executes the CML command to post the report
        run: |
          cml-send-comment result.txt
