name: IRIS CI Pipeline

on:
  push:
    branches: [main, dev]
  pull_request:
    branches: [main, dev]

jobs:
  ci:
    runs-on: ubuntu-latest
    env:
      GCP_CREDENTIALS_JSON: ${{ secrets.GCP_CREDENTIALS }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      # Step 3: Upgrade pip & tools
      - name: Upgrade pip & setuptools
        run: python -m pip install --upgrade pip setuptools wheel

      # Step 4: Install project dependencies
      - name: Install dependencies
        # Ensure pytest is installed here (if not in requirements.txt)
        run: pip install -r requirements.txt --no-cache-dir

      # Step 5: Install DVC separately
      - name: Install DVC
        run: pip install "dvc[gcs]" --no-cache-dir

      # Step 6: *** REMOVE FAILED 'pip install cml' STEP ***

      # Step 7: Save GCP key & configure credentials (Combined for brevity)
      - name: Configure GCP credentials
        run: |
          printf "%s" "${GCP_CREDENTIALS_JSON}" > gcp-key.json
          echo "GOOGLE_APPLICATION_CREDENTIALS=$(pwd)/gcp-key.json" >> $GITHUB_ENV

      # Step 8: Pull model & data from DVC
      - name: Pull data & model
        run: dvc pull -v

      # Step 9: Run evaluation & data validation tests
      - name: Run Pytest tests
        run: |
          pytest tests/ --junitxml=result.xml --tb=short | tee result.txt

      # Step 10: Setup CML and Comment test results (PR only)
      - name: Comment test results via CML
        if: github.event_name == 'pull_request'
        # *** USE THE DEDICATED CML ACTION TO AVOID PIP DEPENDENCY ERRORS ***
        uses: iterative/setup-cml@v2 
        env:
            REPO_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          cml-send-comment result.txt
